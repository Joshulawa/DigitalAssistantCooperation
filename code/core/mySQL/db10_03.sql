-- MySQL Script generated by MySQL Workbench
-- Fri Mar 10 16:54:23 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Users` (
  `idUser` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `matrixId` VARCHAR(45) NULL,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `idUser_UNIQUE` (`idUser` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Groups` (
  `id` INT NOT NULL,
  `groupName` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`broker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`broker` (
  `id` INT NOT NULL,
  `idUser` INT NULL,
  `idGroup` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `idUser_idx` (`idUser` ASC) VISIBLE,
  INDEX `idGroup_idx` (`idGroup` ASC) VISIBLE,
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `mydb`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idGroup`
    FOREIGN KEY (`idGroup`)
    REFERENCES `mydb`.`Groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`msgService`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`msgService` (
  `id` INT NOT NULL,
  `homeserver` VARCHAR(45) NULL,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `mydb`.`Users`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Users` (`idUser`, `name`, `email`, `matrixId`) VALUES (1, 'Hannah', 'hannah@test', 'hannah@matrix.org');
INSERT INTO `mydb`.`Users` (`idUser`, `name`, `email`, `matrixId`) VALUES (2, 'Hiro', 'hiro@test', 'hiro@matrix.org');
INSERT INTO `mydb`.`Users` (`idUser`, `name`, `email`, `matrixId`) VALUES (0, 'Josh', 'josh@test', 'josh@matrix.org');
INSERT INTO `mydb`.`Users` (`idUser`, `name`, `email`, `matrixId`) VALUES (3, 'Xander', 'xander@test', 'xander@matrix.org');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Groups`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Groups` (`id`, `groupName`) VALUES (0, 'maths');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`broker`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`broker` (`id`, `idUser`, `idGroup`) VALUES (0, 0, 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`msgService`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`msgService` (`id`, `homeserver`, `username`, `password`) VALUES (0, 'https://matrix.org', '@josh:matrix.org', 'matrixpassword');

COMMIT;

